{"ast":null,"code":"var _jsxFileName = \"D:\\\\PracticeProjects\\\\New folder\\\\Instaclone\\\\src\\\\PostView\\\\PostView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostView = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const style1 = {\n    border: \"1px solid black\",\n    width: \"90%\",\n    margin: \"5%\"\n  };\n  const style2 = {\n    border: \"1px solid black\",\n    height: \"50px\"\n  };\n  useEffect(() => {\n    fetch(\"https://serverme-rsmp.onrender.com/allpost\").then(res => res.json()).then(result => setData(result));\n  });\n  return data.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style1,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: style2,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            \"margin\": \"1px\"\n          },\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            \"margin\": \"1px\"\n          },\n          children: [\" \", item.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: \"\",\n          height: \"33%\",\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  });\n};\n_s(PostView, \"FTfFkLfVdcj0Uk2EahF49AUIgmY=\");\n_c = PostView;\nexport default PostView;\nvar _c;\n$RefreshReg$(_c, \"PostView\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PostView","_s","data","setData","style1","border","width","margin","style2","height","fetch","then","res","json","result","map","item","style","children","name","fileName","_jsxFileName","lineNumber","columnNumber","location","src","image","alt","description","_c","$RefreshReg$"],"sources":["D:/PracticeProjects/New folder/Instaclone/src/PostView/PostView.js"],"sourcesContent":["import React,{useEffect,useState} from 'react'\r\n\r\n\r\nconst PostView = () => {\r\nconst [data,setData] = useState([]);\r\nconst style1 = {\r\n  border: \"1px solid black\",\r\n  width:\"90%\",\r\n  margin:\"5%\",\r\n}\r\nconst style2 = {\r\n  border:\"1px solid black\",\r\n  height:\"50px\"\r\n}\r\n\r\n\r\nuseEffect(() =>{\r\n  fetch(\"https://serverme-rsmp.onrender.com/allpost\").then((res) =>res.json()).then((result) => setData(result))\r\n})\r\n\r\n  return (\r\n     data.map ( item =>{\r\n      return(\r\n      <div style={style1}>\r\n        <div style = {style2}>\r\n        <h3 style = {{\"margin\":\"1px\"}}>{item.name}</h3> \r\n     <span style = {{\"margin\":\"1px\"}}> {item.location}</span>\r\n        </div>\r\n        <div><img src={item.image} alt=\"\" height=\"33%\" width=\"100%\" />\r\n\r\n        </div>\r\n      <h4>{item.description}</h4>\r\n      \r\n     \r\n       </div>)\r\n     })\r\n    \r\n  )\r\n    }\r\n\r\nexport default PostView\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAMO,MAAM,GAAG;IACbC,MAAM,EAAE,iBAAiB;IACzBC,KAAK,EAAC,KAAK;IACXC,MAAM,EAAC;EACT,CAAC;EACD,MAAMC,MAAM,GAAG;IACbH,MAAM,EAAC,iBAAiB;IACxBI,MAAM,EAAC;EACT,CAAC;EAGDb,SAAS,CAAC,MAAK;IACbc,KAAK,CAAC,4CAA4C,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAAEG,MAAM,IAAKX,OAAO,CAACW,MAAM,CAAC,CAAC;EAChH,CAAC,CAAC;EAEA,OACGZ,IAAI,CAACa,GAAG,CAAGC,IAAI,IAAG;IACjB,oBACAjB,OAAA;MAAKkB,KAAK,EAAEb,MAAO;MAAAc,QAAA,gBACjBnB,OAAA;QAAKkB,KAAK,EAAIT,MAAO;QAAAU,QAAA,gBACrBnB,OAAA;UAAIkB,KAAK,EAAI;YAAC,QAAQ,EAAC;UAAK,CAAE;UAAAC,QAAA,EAAEF,IAAI,CAACG;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAClDxB,OAAA;UAAMkB,KAAK,EAAI;YAAC,QAAQ,EAAC;UAAK,CAAE;UAAAC,QAAA,GAAC,GAAC,EAACF,IAAI,CAACQ,QAAQ;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/C,eACNxB,OAAA;QAAAmB,QAAA,eAAKnB,OAAA;UAAK0B,GAAG,EAAET,IAAI,CAACU,KAAM;UAACC,GAAG,EAAC,EAAE;UAAClB,MAAM,EAAC,KAAK;UAACH,KAAK,EAAC;QAAM;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAExD,eACRxB,OAAA;QAAAmB,QAAA,EAAKF,IAAI,CAACY;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGpB;EACR,CAAC,CAAC;AAGH,CAAC;AAAAtB,EAAA,CAnCCD,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAqCd,eAAeA,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}